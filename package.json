{
    "name": "autoproj",
    "displayName": "Autoproj",
    "description": "Base support for Autoproj workspaces",
    "version": "0.2.0",
    "publisher": "arjones",
    "license": "SEE LICENSE IN LICENSE.txt",
    "icon": "images/icon.png",
    "author": {
        "name": "Gabriel Arjones"
    },
    "contributors": [
        {
            "name": "Gabriel Arjones",
            "email": "arjones@arjones.com"
        },
        {
            "name": "Sylvain Joyeux",
            "email": "sylvain.joyeux@m4x.org"
        }
    ],
    "galleryBanner": {
        "color": "#458ccc",
        "theme": "dark"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/g-arjones/vscode-autoproj.git"
    },
    "engines": {
        "vscode": "^1.85.2"
    },
    "activationEvents": [
        "*"
    ],
    "main": "./out/src/extension",
    "categories": [
        "Other"
    ],
    "keywords": [
        "rock",
        "robotics",
        "autoproj"
    ],
    "contributes": {
        "commands": [
            {
                "title": "Add package to workspace",
                "category": "Autoproj",
                "command": "autoproj.addPackageToWorkspace"
            },
            {
                "title": "Add package to TestMate C++",
                "category": "Autoproj",
                "command": "autoproj.addPackageToTestMate"
            },
            {
                "title": "Enable debugging symbols (CMake)",
                "category": "Autoproj",
                "command": "autoproj.enableCmakeDebuggingSymbols"
            },
            {
                "title": "Open workspace",
                "category": "Autoproj",
                "command": "autoproj.openWorkspace"
            },
            {
                "title": "Remove debug configuration",
                "category": "Autoproj",
                "command": "autoproj.removeDebugConfiguration"
            },
            {
                "title": "Remove entry from TestMate C++",
                "category": "Autoproj",
                "command": "autoproj.removeTestMateEntry"
            },
            {
                "title": "Save last debugging session",
                "category": "Autoproj",
                "command": "autoproj.saveLastDebuggingSession"
            },
            {
                "title": "Start debugging (gdb)",
                "category": "Autoproj",
                "command": "autoproj.startDebugging"
            },
            {
                "title": "Restart last debugging session",
                "category": "Autoproj",
                "command": "autoproj.restartDebugging"
            },
            {
                "title": "Update workspace environment",
                "category": "Autoproj",
                "command": "autoproj.updateWorkspaceEnvironment"
            }
        ],
        "languages": [
            {
                "id": "ruby",
                "extensions": [
                    ".autobuild"
                ]
            },
            {
                "id": "yaml",
                "extensions": [
                    ".osdeps"
                ],
                "filenames": [
                    "manifest"
                ]
            }
        ],
        "problemMatchers": [
            {
                "name": "autoproj",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": [
                    {
                        "regexp": "^\\(\\d+\\) .+\\(([^\\)]+)\\): (failed in .* phase)$",
                        "kind": "file",
                        "file": 1,
                        "message": 2
                    },
                    {
                        "regexp": "^    (.*)",
                        "message": 1,
                        "loop": true
                    }
                ]
            },
            {
                "name": "autoproj-cmake-configure-error-relative",
                "owner": "autoproj",
                "fileLocation": "relative",
                "severity": "error",
                "pattern": [
                    {
                        "regexp": "(?:Autobuild::\\w+):(?:[^:]+):(?:configure|build): (?:.+\n)?CMake Error(?: \\(dev\\))? at (?!\\/.*$)([\\/0-9a-zA-Z\\._-]+):(\\d+).*",
                        "file": 1,
                        "line": 2,
                        "message": -1
                    },
                    {
                        "regexp": "(?:Autobuild::\\w+):(?:[^:]+):(?:configure|build): (?!Call Stack)(.*)",
                        "message": 1,
                        "loop": true
                    }
                ]
            },
            {
                "name": "autoproj-cmake-configure-warning-relative",
                "owner": "autoproj",
                "fileLocation": "relative",
                "severity": "warning",
                "pattern": [
                    {
                        "regexp": "(?:Autobuild::\\w+):(?:[^:]+):(?:configure|build): (?:.+\n)?CMake Warning(?: \\(dev\\))? at (?!\\/.*$)([\\/0-9a-zA-Z\\._-]+):(\\d+).*",
                        "file": 1,
                        "line": 2,
                        "message": -1
                    },
                    {
                        "regexp": "(?:Autobuild::\\w+):(?:[^:]+):(?:configure|build): (?!Call Stack)(.*)",
                        "message": 1,
                        "loop": true
                    }
                ]
            },
            {
                "name": "autoproj-cmake-configure-error-absolute",
                "owner": "autoproj",
                "fileLocation": "absolute",
                "severity": "error",
                "pattern": [
                    {
                        "regexp": "(?:Autobuild::\\w+):(?:[^:]+):(?:configure|build): (?:.+\n)?CMake Error(?: \\(dev\\))? at (\\/+[\\/0-9a-zA-Z\\._-]+):(\\d+).*",
                        "file": 1,
                        "line": 2,
                        "message": -1
                    },
                    {
                        "regexp": "(?:Autobuild::\\w+):(?:[^:]+):(?:configure|build): (?!Call Stack)(.*)",
                        "message": 1,
                        "loop": true
                    }
                ]
            },
            {
                "name": "autoproj-cmake-configure-warning-absolute",
                "owner": "autoproj",
                "fileLocation": "absolute",
                "severity": "warning",
                "pattern": [
                    {
                        "regexp": "(?:Autobuild::\\w+):(?:[^:]+):(?:configure|build): (?:.+\n)?CMake Warning(?: \\(dev\\))? at (\\/+[\\/0-9a-zA-Z\\._-]+):(\\d+).*",
                        "file": 1,
                        "line": 2,
                        "message": -1
                    },
                    {
                        "regexp": "(?:Autobuild::\\w+):(?:[^:]+):(?:configure|build): (?!Call Stack)(.*)",
                        "message": 1,
                        "loop": true
                    }
                ]
            },
            {
                "name": "autoproj-orogen-error",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "severity": "error",
                "pattern": {
                    "regexp": "Autobuild::Orogen:(?:[^:]+):orogen: (.+):(\\d+):\\s+(.+)",
                    "file": 1,
                    "line": 2,
                    "message": 3
                }
            },
            {
                "name": "autoproj-gcc-compile-error",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "(?:Autobuild::\\w+):(?:[^:]+):build: (.+):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(error):\\s+(.+)",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            },
            {
                "name": "autoproj-gcc-compile-template-expansion",
                "severity": "error",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "(?:Autobuild::\\w+):(?:[^:]+):build: (.+):(\\d+):(\\d+):\\s+(required from .+)",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "message": 4
                }
            },
            {
                "name": "autoproj-gcc-compile-warning",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "(?:Autobuild::\\w+):(?:[^:]+):build: (?:.+:\\d+:\\d+:\n)?(.+):(\\d+):(\\d+):\\s+(?:.*\\s+)?(warning):\\s+(.+)",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        ],
        "taskDefinitions": [
            {
                "type": "autoproj-package",
                "required": [
                    "workspace",
                    "mode",
                    "path"
                ],
                "properties": {
                    "workspace": {
                        "type": "string",
                        "description": "The workspace root"
                    },
                    "path": {
                        "type": "string",
                        "description": "The package path"
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "update",
                            "checkout",
                            "build",
                            "build-no-deps",
                            "force-build"
                        ],
                        "description": "The operation mode"
                    }
                }
            },
            {
                "type": "autoproj-workspace",
                "required": [
                    "workspace",
                    "mode"
                ],
                "properties": {
                    "workspace": {
                        "type": "string",
                        "description": "The workspace root"
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "build",
                            "osdeps",
                            "update-config",
                            "update",
                            "checkout"
                        ],
                        "description": "The operation mode"
                    }
                }
            }
        ],
        "configuration": {
            "title": "Autoproj extension configuration",
            "properties": {
                "autoproj.supressCmakeBuildTypeOverrideNotice": {
                    "type": "boolean",
                    "description": "Supress notice shown when CMake build type is overriden",
                    "default": false
                },
                "autoproj.tasks.package.build": {
                    "type": "boolean",
                    "description": "Provide \"Build\" tasks",
                    "default": true
                },
                "autoproj.tasks.package.rebuild": {
                    "type": "boolean",
                    "description": "Provide \"Rebuild\" tasks",
                    "default": false
                },
                "autoproj.tasks.package.forceBuild": {
                    "type": "boolean",
                    "description": "Provide \"Force Build\" tasks",
                    "default": false
                },
                "autoproj.tasks.package.buildNoDeps": {
                    "type": "boolean",
                    "description": "Provide \"Build (nodeps)\" tasks",
                    "default": false
                },
                "autoproj.tasks.package.checkout": {
                    "type": "boolean",
                    "description": "Provide \"Checkout\" tasks",
                    "default": false
                },
                "autoproj.tasks.package.update": {
                    "type": "boolean",
                    "description": "Provide \"Update\" tasks",
                    "default": false
                },
                "autoproj.tasks.workspace.build": {
                    "type": "boolean",
                    "description": "Provide \"Build all packages\" tasks",
                    "default": false
                },
                "autoproj.tasks.workspace.updateConfig": {
                    "type": "boolean",
                    "description": "Provide \"Update Configuration\" tasks",
                    "default": false
                },
                "autoproj.tasks.workspace.installOsdeps": {
                    "type": "boolean",
                    "description": "Provide \"Install OS Dependencies\" tasks",
                    "default": false
                },
                "autoproj.tasks.workspace.update": {
                    "type": "boolean",
                    "description": "Provide \"Update all packages\" tasks",
                    "default": false
                },
                "autoproj.tasks.workspace.checkout": {
                    "type": "boolean",
                    "description": "Provide \"Checkout all packages\" tasks",
                    "default": false
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js",
        "test-ci": "c8 --reporter=lcov --exclude='*/test/*' --exclude='*/src/wrappers.js' npm run test",
        "coverage": "c8 --reporter=html --exclude='*/test/*' --exclude='*/src/wrappers.js' npm run test"
    },
    "extensionDependencies": [
        "matepek.vscode-catch2-test-adapter",
        "ms-python.python",
        "ms-vscode.cpptools",
        "shopify.ruby-lsp"
    ],
    "dependencies": {
        "@nodelib/fs.walk": "^2.0.0",
        "js-yaml": "^4.1.0",
        "p-limit": "^3.1.0",
        "vscode-cpptools": "^6.1.0"
    },
    "devDependencies": {
        "@types/js-yaml": "^4.0.9",
        "@types/lodash": "^4.17.1",
        "@types/mocha": "^5.2.5",
        "@types/node": "^20.12.2",
        "@types/vscode": "^1.85.2",
        "@vscode/test-electron": "^2.3.9",
        "c8": "^9.1.0",
        "lodash": "^4.17.21",
        "mocha": "^10.4.0",
        "source-map-support": "^0.5.21",
        "typemoq": "^2.1.0",
        "typescript": "^5.4.5"
    }
}
